#!/usr/bin/env python3

import os

import multi_repo_automation as mra

# if os.path.exists(".github/renovate.json5"):
# if mra.run(["grep", "text", ".github/renovate.json5"], exit_on_error=False).returncode != 0: # not found
# if mra.git_grep(r"\<text\>"]): # found
# if mra.run(["git", "ls-files", "**/*.txt"], stdout=subprocess.PIPE).stdout.strip() != b"": # found
# mra.edit("file")
# input()


def _do() -> None:
    if not os.path.exists(".pre-commit-config.yaml"):
        with mra.EditYAML(".pre-commit-config.yaml") as yaml:
            yaml["repos"] = []


if __name__ == "__main__":
    mra.main(
        _do,
        # pull_request_on_stabilization_branches
        # pull_request_title
        # pull_request_body
        # branch
        # pull_request_branch_prefix
        config={
            "pull_request_branch_prefix": "empty-pre-commit-",
            "pull_request_on_stabilization_branches": True,
            "pull_request_title": "Add empty pre-commit configuration",
            "pull_request_body": "To avoid the pre-commit checks to fail",
        },
    )
